http {
  port: 8080
  port: ${?HTTP_PORT}
}

prometheus {
  port: 4321
  port: ${?PROMETHEUS_PORT}
}

kafka {
  url = ${KAFKA_URL}
  topic {
    incoming: ${KAFKA_TOPIC_OUT} # outgoing as in outgoing requests, which are incoming kafka packets...
    outgoing: ${KAFKA_TOPIC_IN}
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  kafka {
    committer {
      # Maximum number of messages in a single commit batch
      max-batch = 1000
      # Maximum interval between commits
      #max-interval = 10s
      # Parallelsim for async committing
      parallelism = 1
    }
  }

  http.server {
    request-timeout = 30 s
  }

  cluster {
    seed-nodes = []
    seed-nodes = ${?SEED_NODES}
  }

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?HOSTNAME}
      bind-hostname = 0.0.0.0
      port = 2551
      port = ${?PORT}
    }
  }

  management {
    http {
      hostname = "127.0.0.1"
      hostname = ${?HOSTNAME}
      bind-hostname = "0.0.0.0"
      port = 8558
      bind-port = 8558
    }

    cluster.bootstrap {
      contact-point-discovery {
        required-contact-point-nr = 2 // minimun number of nodes to bootstrap the cluster
        required-contact-point-nr = ${?REQUIRED_CONTACT_POINTS}
      }
    }
  }

  discovery {
    method = kubernetes-api
    method = ${?DISCOVERY_METHOD}

    kubernetes-api {
      pod-namespace = "ubirch-dev" // in which namespace cluster is running
      pod-namespace = ${?K8S_NAMESPACE}
      pod-label-selector = "app=niomon,component=http" // selector - how to find other cluster nodes
      pod-label-selector = ${?K8S_SELECTOR}
      pod-port-name = "akka-management" // name of cluster management port
      pod-port-name = ${?K8S_MANAGEMENT_PORT}
    }
  }
}

